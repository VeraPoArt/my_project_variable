name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v3

      - name: Установить Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Установить зависимости
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install

      - name: Запустить тесты Playwright
        run: |
          mkdir -p allure-results
          pytest tests/ --alluredir=allure-results/

      - name: Установить Allure
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Генерация отчета Allure
        run: |
          curl -o allure.zip -L https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.19.0/allure-commandline-2.19.0.zip
          unzip allure.zip -d /opt/
          export PATH=$PATH:/opt/allure-2.19.0/bin
          allure generate allure-results --clean -o allure-report

      - name: Публиковать отчет Allure
        uses: actions/upload-artifact@v3
        with:
          name: Allure Report
          path: allure-report

      - name: Скопировать проект в VeraPoArt/playwright_course
        if: ${{ github.event_name == 'push' }}  # Действие только при пуше в main (можно менять логику)
        run: |
          # Настраиваем git
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Добавляем удалённый репозиторий VeraPoArt/playwright_course
          git remote add second "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/VeraPoArt/playwright_course.git"

          # Пушим текущую ветку (main) в репозиторий second, в ветку main
          # Если нужно перезаписывать историю, можно добавить --force
          git push second HEAD:main
